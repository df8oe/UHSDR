name: CI/CD

on:
  # Trigger the workflow on push or pull request,
  # but only for the devel branch
  push:
    branches:
      - active-devel
  pull_request:
    branches:
      - active-devel

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        boards: [f7, h7, f7-lapwing, f4, f4-small, f4-ili9486-480]
    
    env:
      ROOTLOC: ../..
      BUILDLOC: mchf-eclipse/build
      MAKEFLAGS: -j2 

    steps:
    - uses: actions/checkout@v2

    - name: Install libs
      run: sudo apt-get install -y gcc-arm-none-eabi python2-minimal build-essential

    - name: Build firmware
      shell: bash
      run: |
        mkdir -p mchf-eclipse/build/fw-${{ matrix.boards }}
        cd $BUILDLOC/fw-${{ matrix.boards }}
        make $MAKEFLAGS -f $ROOTLOC/boards/${{ matrix.boards }}.mk ROOTLOC=$ROOTLOC all

    - name: Build bootloader
      shell: bash
      if: ${{ contains(matrix.boards, '-') == false }}
      run: |
        mkdir -p mchf-eclipse/build/bl-${{ matrix.boards }}
        cd $BUILDLOC/bl-${{ matrix.boards }}
        make $MAKEFLAGS -f $ROOTLOC/boards/${{ matrix.boards }}.mk ROOTLOC=$ROOTLOC bootloader

    # upload all firmwares
    - uses: actions/upload-artifact@v2
      with:
        path: mchf-eclipse/build/**/*.dfu
name: CMake

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - active-devel
  pull_request:
    branches:
      - active-devel

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-M7:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-for: [F7, H7]
  
    steps:
    - uses: actions/checkout@v2

    - name: Install libs
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: sudo apt-get install -y gcc-arm-none-eabi python2-minimal build-essential

    - name: Build firmware mchf_${{ matrix.build-for }}
      shell: bash
      run: cd mchf-eclipse ; make BUILDFOR=${{ matrix.build-for }} CONFIGFLAGS="-DUI_BRD_OVI40 -DRF_BRD_OVI40 -DRF_BRD_MCHF" TRX_ID="mchf_${{ matrix.build-for }}" clean all

    - uses: actions/upload-artifact@v2
      with:
        name: fw-mchf_${{ matrix.build-for }}.dfu
        path: mchf-eclipse/fw-mchf_${{ matrix.build-for }}.dfu

    - name: Build bootloader mchf_${{ matrix.build-for }}
      shell: bash
      run: cd mchf-eclipse ; make BUILDFOR=${{ matrix.build-for }} CONFIGFLAGS="-DUI_BRD_OVI40 -DRF_BRD_OVI40 -DRF_BRD_MCHF" TRX_ID="mchf_${{ matrix.build-for }}" clean bootloader

    - uses: actions/upload-artifact@v2
      with:
        name: bl-mchf_${{ matrix.build-for }}.dfu
        path: mchf-eclipse/bl-mchf_${{ matrix.build-for }}.dfu

  build-M4:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-for: [F4, F4-512KB]
  
    steps:
    - uses: actions/checkout@v2

    - name: Install libs
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: sudo apt-get install -y gcc-arm-none-eabi python2-minimal build-essential

    - name: Build firmware mchf_${{ matrix.build-for }}
      shell: bash
      run: cd mchf-eclipse ; make BUILDFOR=${{ matrix.build-for }} CONFIGFLAGS="-DUI_BRD_MCHF -DRF_BRD_OVI40 -DRF_BRD_MCHF" TRX_ID="mchf_${{ matrix.build-for }}" clean all

    - uses: actions/upload-artifact@v2
      with:
        name: fw-mchf_${{ matrix.build-for }}.dfu
        path: mchf-eclipse/fw-mchf_${{ matrix.build-for }}.dfu

    - name: Build bootloader mchf_${{ matrix.build-for }}
      shell: bash
      run: cd mchf-eclipse ; make BUILDFOR=${{ matrix.build-for }} CONFIGFLAGS="-DUI_BRD_MCHF -DRF_BRD_OVI40 -DRF_BRD_MCHF" TRX_ID="mchf_${{ matrix.build-for }}" clean bootloader

    - uses: actions/upload-artifact@v2
      with:
        name: bl-mchf_${{ matrix.build-for }}.dfu
        path: mchf-eclipse/bl-mchf_${{ matrix.build-for }}.dfu